name: 'Get Build Definition ID'
description: 'Get the build definition ID for a given pipeline name'
inputs:
  pipeline-name: 
    description: 'The name of the pipeline to get the build definition ID for'
    required: true
  ado_token: 
    description: 'The Azure DevOps PAT token'
    required: true
  ado_url: 
    description: 'The Azure DevOps URL'
    required: true
outputs:
  pipeline-id:
    description: 'The build definition ID for the specified pipeline'
    value: ${{ steps.get-build-definition-id.outputs.PIPELINE_ID }}

runs:
  using: "composite"
  steps:
    - name: Get build definition ID
      id: get-build-definition-id
      env:
        PIPELINE_NAME: ${{ inputs.pipeline-name }}
        ADO_TOKEN: ${{ inputs.ado_token }}
        ADO_URL: ${{ inputs.ado_url }}
      run: |
        echo "Getting build definition ID for pipeline $PIPELINE_NAME"
        DEF_RESULTS=$(curl -s -H "Authorization: Basic $(echo -n ":$ADO_TOKEN" | base64 -w0)" \
          "$ADO_URL/_apis/build/definitions?name=$PIPELINE_NAME")

        if [ $(echo "$DEF_RESULTS" | jq .count) -gt 1 ]; then
            echo "Error: More than one pipeline found with name '$PIPELINE_NAME'."
            exit 1
        elif [ $(echo "$DEF_RESULTS" | jq .count) -eq 0 ]; then
            echo "Error: No pipeline found with name '$PIPELINE_NAME'."
            exit 1
        else
            BUILD_DEFINITION_ID=$(echo "$DEF_RESULTS" | jq -r '.value[0].id')
            echo "Build definition ID for pipeline '$PIPELINE_NAME' is $BUILD_DEFINITION_ID."
            echo "PIPELINE_ID=$BUILD_DEFINITION_ID" >> $GITHUB_ENV
        fi

